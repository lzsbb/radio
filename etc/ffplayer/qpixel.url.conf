# options for AV stream coming from a Qpixel board
# all values in microseconds

player.sync.offset=200000  #audio / video offset. postivie value <=> play audio before it should

# jitter control options


#		Jitter control:
#		we record:
#		the filtered minimum of audio & video buffering time 
#		it gives us a graph like the following one where the buffering value oscillate between 0, 
#		a "LAbort".(never can go higher)
#		
#		     LAbort ---------------------------------------------------
#		                                     ____
#		      LFlush ------------------     / B  \ --------------------
#		                                   /     \       _D
#		    LSpeedUp ---------------------/----- \ ---- / \_   --------
#		                                 /       \     /    \_
#		        LHi  -------------------/--------\____/------ \_   ----
#		                               /           C            \______
#		                              /                          E
#		             --_             /
#		                \          _/
#		        LLo  --- \_       /    -------------------------------------
#		                   \     /
#		 LSpeedDown --------\_A_/
#		        0  ________________________________________________________
#		
#		
#		- LSpeedDown (A) : we estimate that the buffering level is too short to be safe.
#		           In this case, we play audio slower, to slighlty increase the buffering, until we reach LLo
#		
#		- LFlush (B -> C) : a high buffering level when it is time to flush packets, without decoding them.
#		           when we enter this state, we keep decreasing the buffering until level reach LHi at least.
#		
#		- LSpeedUp (D) : the level is High, but not too high to need to flush.
#		           Just try to play audio faster until we reach LHi
#		
#		- Between LLo and LHi : buffering is good. not too large (delay), not too small (under buffering issues)




player.sync.jitter_control_enable=1
player.sync.jitter_control_period=1000000  # how often do we take decisions

player.sync.LAbort 	= 10000000
player.sync.LFlush 	=  1000000
player.sync.LSpeedUp	=   500000
player.sync.LHi		=   400000
player.sync.LLo		=   150000
player.sync.LSpeedDown	=    50000


player.sync.initial_prebuff=150000   # initial pre-bufferisation before playing


# speed up zapping
player.mpegts.scan_pat_first=1
player.find_stream_info.force_video=720x480/YUV422

